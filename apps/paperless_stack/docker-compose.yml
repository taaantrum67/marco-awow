version: "3.9"

networks:
  paperless:
    driver: bridge

services:
  broker:
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - ${BROKER_DATA_REDIS}:/data
    networks:
      - paperless

  db:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    volumes:
      - ${DB_DATA_PGDATA}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - "${WEBSERVER_PORT}:8000"
    volumes:
      - ${WEBSERVER_DATA}:/usr/src/paperless/data
      - ${WEBSERVER_MEDIA}:/usr/src/paperless/media
      - ${WEBSERVER_EXPORT}:/usr/src/paperless/export
      - ${WEBSERVER_CONSUME}:/usr/src/paperless/consume
    environment:
      PAPERLESS_CONSUMER_POLLING: "30"
      PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: "5"
      PAPERLESS_CONSUMER_POLLING_DELAY: "5"
      PAPERLESS_CONSUMER_INOTIFY_DELAY: "5"
      PAPERLESS_REDIS: "redis://broker:6379"
      PAPERLESS_DBHOST: "db"
      PAPERLESS_TIKA_ENABLED: "1"
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://gotenberg:3000"
      PAPERLESS_TIKA_ENDPOINT: "http://tika:9998"
      PAPERLESS_URL: ${PAPERLESS_URL}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      PAPERLESS_CSRF_TRUSTED_ORIGINS: ${PAPERLESS_CSRF_TRUSTED_ORIGINS}
      PAPERLESS_ALLOWED_HOSTS: ${PAPERLESS_ALLOWED_HOSTS}
      PAPERLESS_CORS_ALLOWED_HOSTS: ${PAPERLESS_CORS_ALLOWED_HOSTS}
    networks:
      - paperless

  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.20
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - paperless

  tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped
    networks:
      - paperless

  paperless-ai:
    image: clusterzx/paperless-ai
    container_name: paperless-ai
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PAPERLESS_AI_PORT=${PAPERLESS_AI_PORT:-3000}
      - RAG_SERVICE_URL=http://webserver:8000
      - RAG_SERVICE_ENABLED=true
      - PAPERLESS_API_URL=http://webserver:8000/api
      - PAPERLESS_API_TOKEN=${PAPERLESS_API_TOKEN}
    ports:
      - ${EXTERNAL_PAPERLESS_AI_PORT}:3000
    volumes:
      - ${PAPERLESS_AI_DATA}:/app/data
    networks:
      - paperless
