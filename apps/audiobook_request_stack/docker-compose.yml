version: "3.9"

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # Expose only the ports you need from the VPN namespace:
    ports:
      - "${QBIT_WEBUI_PORT}:8080"                       # qBittorrent Web UI
      - "${QBIT_TORRENT_PORT}:${QBIT_TORRENT_PORT}/tcp" # qBit TCP
      - "${QBIT_TORRENT_PORT}:${QBIT_TORRENT_PORT}/udp" # qBit UDP
     
      - "${PROWLARR_PORT}:9696"                         # Prowlarr UI

      - "${ABR_APP__EXTERNAL_PORT}:8000"   # AudiobookRequest UI via VPN

    volumes:
      - ${GLUETUN_CONFIG_DIR}:/gluetun
    environment:
      # --- VPN PROVIDER SELECTION ---
      VPN_SERVICE_PROVIDER: ${VPN_SERVICE_PROVIDER}
      VPN_TYPE: ${VPN_TYPE}
      VPN_PORT_FORWARDING: "on"
      VPN_PORT_FORWARDING_PROVIDER: ${VPN_SERVICE_PROVIDER}
      VPN_PORT_FORWARDING_LISTENING_PORT: ${QBIT_TORRENT_PORT}
      VPN_PORT_FORWARDING_STATUS_FILE: /gluetun/forwarded_port

      # --- WIREGUARD KEYS (if using VPN_TYPE=wireguard) ---
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_PRIVATE_KEY}
      WIREGUARD_ADDRESSES: ${WIREGUARD_ADDRESSES} # e.g. 10.2.0.2/32

      # --- LOCATION FILTERS (optional) ---
      SERVER_COUNTRIES: ${SERVER_COUNTRIES}       # e.g. CH,NL,DE            # optional, comma-separated
      PORT_FORWARD_ONLY: "on"
      
      # --- HEALTHCHECK TUNING (optional) ---
      HEALTH_VPN_DURATION_INITIAL: ${HEALTH_VPN_DURATION_INITIAL:-120s}
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "1.1.1.1"]
      interval: 20s
      timeout: 10s
      retries: 5
    restart: unless-stopped


  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      WEBUI_PORT: 8080                                 # must stay 8080 inside container
      TORRENTING_PORT: ${QBIT_TORRENT_PORT}
    volumes:
      - ${QBIT_CONFIG_DIR}:/config
      - ${QBIT_DOWNLOADS_DIR}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: "service:gluetun"                    # routes all traffic via gluetun
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK: ${UMASK:-002}
    volumes:
      - ${PROWLARR_CONFIG_DIR}:/config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: "service:gluetun"                    # Prowlarr also goes through VPN
    restart: unless-stopped

  audiobookrequest:
    image: markbeep/audiobookrequest:1
    container_name: audiobookrequest
    environment:
      - ABR_APP__PORT=8000
      - ABR_APP__INIT_ROOT_USERNAME=${ABR_APP__INIT_ROOT_USERNAME}
      - ABR_APP__INIT_ROOT_PASSWORD=${ABR_APP__INIT_ROOT_PASSWORD}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    volumes:
      - ${ABR_CONFIG_DIR}:/config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: "service:gluetun"   # <â€” routes all traffic via VPN
    restart: unless-stopped
